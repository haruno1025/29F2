------------------------------------------------------------------------
--  第１編　総則
--    第１条(目的)
--    第２条(適用範囲)
--    第３条(用語の意義)
--    第４条(契約の成立及び適用規定)
--    第５条(使用方法及び制限事項)
--    第６条(運賃)
--    第７条(個人情報の取扱い)
--    第８条(旅客の同意)
--    第９条(取扱区間)
--    第１０条(制限又は停止)
------------------------------------------------------------------------

class 第１編（総則） is subclass of 東京メトロ

types
--	public 年齢別旅客区分型 = <大人>　| <小人> | <幼児> | <乳児>;
	
values

public 駅 : set of token = {};
-- TODO Define values here

instance variables
--	public i年齢別旅客区分 : 年齢別旅客区分型;
--	public i乗車駅 : set of メトロ;
--	public i降車駅 : set of メトロ;
--	public i相互発着 : set of メトロ

	/*
	 * 綾瀬・北千住間相互発着となる場合及び目黒・白金高輪間相互発着
	 * となる場合は、キロ程によらず、次の各号のとおりとする。
	 *   (1) 綾瀬・北千住間相互発着となる場合		133円
	 *        (C18, C19) |-> 133  -- 北千住 → 綾瀬
	 *        (H21, C19) |-> 133  -- 北千住 → 綾瀬
	 *        (C19, C18) |-> 133  -- 綾瀬 → 北千住
	 *        (C19, H21) |-> 133  -- 綾瀬 → 北千住
	 *   (2) 目黒・白金高輪間相互発着となる場合		165円
	 *        (N01, N03) |-> 165  -- 目黒 → 白金高輪
	 *        (N03, N01) |-> 165  -- 白金高輪 → 目黒
	 */
	protected 相互発着写像　: map (token * token ) to nat1 := {|->};

	/*
	 * 乗車駅から降車駅間の距離への写像
	 *   (乗車駅, 降車駅) |-> 距離（Km）
	 */
	protected キロ程写像　: map (token * token ) to set of real := {|->};
	
	/*
	 * 乗車駅から降車駅間の大人片道普通旅客運賃への写像
	 *   (乗車駅, 降車駅) |-> 大人片道普通旅客運賃（円）
	 */
	protected 普通旅客運賃写像　: map (token * token ) to nat1 := {|->};

	--第９条 当社におけるＩＣカード乗車券の取扱区間は、営業規程第３条第１号に規定する当社線とする。
	inv
	  forall mk_(a乗車駅, a降車駅) in set dom(普通旅客運賃写像)
 	   & 当社線駅である(a乗車駅) and 当社線駅である(a降車駅)
;


operations

  -- 第６条(運賃)
  --　    この規則における普通旅客運賃は、前条第１項の定めにより乗車した場合に適用する運賃をいう

  -- 第６条２項
	/*********************************************************************
	 * Operation名　：　get運賃_第６条２項
	 *　概要　　　　　　  ：　乗車駅（a乗車駅）と降車駅（b降車駅）を引数として大人片道普通旅客運賃を
   *              返却する 
	 *
	 *　[規定]
	 * ２　前項に定める普通旅客運賃のうち、大人片道普通旅客運賃は、旅客の乗車する発着区間
	 *　　　キロ程により、次によって区分した１円単位運賃とする。
	 *　　　　　１区 　１キロメートルから　　６キロメートルまで　　１６５円
	 *　　　　　２区 　７キロメートルから　１１キロメートルまで　　１９５円
	 *　　　　　３区 １２キロメートルから　１９キロメートルまで　　２３７円
	 *　　　　　４区 ２０キロメートルから　２７キロメートルまで　　２７８円
	 *　　　　　５区 ２８キロメートルから　４０キロメートルまで　　３０８円
	 *　　　ただし、綾瀬・北千住間相互発着となる場合及び目黒・白金高輪間相互発着となる場合は、
	 *　　　キロ程によらず、次の各号のとおりとする。
	 *　　　　　（１）綾瀬・北千住間相互発着となる場合　　　１３３円
	 *　　　　　（２）目黒・白金高輪間相互発着となる場合　  １６５円
	**********************************************************************/
  -- 備忘：
  -- 当記述と後述の第４項はともに大人片道普通旅客運賃を規定しており、重複している
  -- 好意的に読み取れば２項が計算仕様、４項がそれにもとづいて算出された具体的な運賃となるが、
  -- そのようなことは明記されておらずあいまいである。
  -- 備忘：
  -- 最短のキロ程を算出するための方法は不明
  -- 東京メトロだけでは合致しない運賃になるパターンが存在する
  -- 例）浅草→茗荷谷 メトロだけでは13.8km → 237円 実際は195円
  -- もしかしたら東京メトロ以外の路線（都営線、JRなど）も含めたキロ程を使用しているかも。
	public pure get運賃_第６条２項 : token * token ==> nat1
	get運賃_第６条２項(a乗車駅, a降車駅) == 
	 (dcl l最短キロ程 : real, lキロ程 : nat, l大人片道普通旅客運賃 : nat1;
		-- 相互発着の場合
	 	if mk_(a乗車駅, a降車駅) in set dom(相互発着写像) then
	    l大人片道普通旅客運賃 := 相互発着写像(mk_(a乗車駅, a降車駅))
		-- 相互発着ではない場合
	  else
		  l最短キロ程 := 最短のキロ程を取得する(キロ程写像(mk_(a乗車駅, a降車駅)));
		  lキロ程 := 端数を１キロ単位に切り上げ(l最短キロ程);
		  if 1 <= lキロ程 and lキロ程 <= 6 then
		    l大人片道普通旅客運賃 := 165
		  else if 7 <= lキロ程 and lキロ程 <= 11 then
		    l大人片道普通旅客運賃 := 195
		  else if 12 <= lキロ程 and lキロ程 <= 19 then
		    l大人片道普通旅客運賃 := 237
		  else if 20 <= lキロ程 and lキロ程 <= 27 then
		    l大人片道普通旅客運賃 := 278
		  else if 28 <= lキロ程 and lキロ程 <= 40 then
		    l大人片道普通旅客運賃 := 308;

    return l大人片道普通旅客運賃; 		  
	)
	pre
		a乗車駅 <> a降車駅 and
		(	mk_(a乗車駅, a降車駅) in set dom(キロ程写像) or
			mk_(a乗車駅, a降車駅) in set dom(相互発着写像))
	;

  -- 第６条３項      todo
	/*********************************************************************
	 * Operation名　：　
	 *　概要　　　　　　  ：　
	 *
	 *　[規定]
   * 第６条３項 旅客が前条第１項に定める使用方法によらず乗車した場合であっても、
   *         当社が特に認めた場合は、前項に定める普通旅客運賃を適用することがある。
   *         ただし、次の各号のいずれかに該当する場合は、営業規定に定める普通旅客
   *         運賃を適用する。
   *         (1) 前条第７項の規定により他の乗車券を併用した場合で、営業規定に
   *             定める乗車券で旅行を開始した場合
   *         (2) 前条第７項の規定により他の乗車券を併用した場合で、併用した乗車券
   *             について営業規定第１３１条第２項に定める取り扱いを行った場合
	**********************************************************************/
  
  -- 第６条４項
	/*********************************************************************
	 * Operation名　：　get運賃_第６条４項
	 *　概要　　　　　　  ：　乗車駅（a乗車駅）と降車駅（b降車駅）を引数として大人片道普通旅客運賃を
	 *              返却する 
	 *
	 *　[規定]
	 * ４　第２項による大人片道普通旅客運賃は、別表第３のとおりとする。
	**********************************************************************/
 	public pure get運賃_第６条４項 : token * token ==> nat1
	get運賃_第６条４項(a乗車駅, a降車駅) == return 普通旅客運賃写像(mk_(a乗車駅, a降車駅))
	pre
		a乗車駅 <> a降車駅 and
		(	mk_(a乗車駅, a降車駅) in set dom(普通旅客運賃写像));

  -- 第６条の２(小児片道普通旅客運賃)
	/*********************************************************************
	 * Operation名　：　get運賃_第６条の２
	 *　概要　　　　　　  ：　大人片道普通旅客運賃を引数として小児片道普通旅客運賃を返却する 
	 *
	 *　[規定]
	 * 第６条の２　小児片道普通旅客運賃は、大人片道普通旅客運賃を折半し、１円未満の
	 *          端数を切り捨てた額とする。
	**********************************************************************/
	public pure get運賃_第６条の２ : nat1 ==> nat1
	get運賃_第６条の２(a大人片道普通旅客運賃) == return floor(a大人片道普通旅客運賃　/ 2) 
	pre
		a大人片道普通旅客運賃 in set rng(普通旅客運賃写像);

	--第６条の３(消費税課税の運賃) 
	/*********************************************************************
	 * Operation名　：　なし
	 *　概要　　　　　　  ：　大人片道普通旅客運賃に税は含まれているため、Operationはなし
	 *
	 *　[規定]
	 * 第６条の３　この規則に規定する運賃については、消費税法（昭和６３年法律第１０８号）の定めによる
	 *         消費税相当額及び地方税法（昭和２５年法律第２２６号）の定めによる地方消費税相当
	 *         額を含んだ額とする。
	**********************************************************************/

　　--第７条(個人情報の取扱い) 
	/*********************************************************************
	 * Operation名　：　なし
	 *　概要　　　　　　  ：　個人情報の扱いのため、Operationはなし
	 *
	 *　[規定]
	 * 第７条　記名ＩＣカードに係る個人情報の取扱いは、ＩＣカード発行事業者の定めるところによる。
	**********************************************************************/

  --第８条(旅客の同意) 
	/*********************************************************************
	 * Operation名　：　なし
	 *　概要　　　　　　  ：　同意に関するの扱いのため、Operationはなし
	 *
	 *　[規定]
	 * 第８条　旅客は、この規則及びこれに基づいて定められた規定を承認し、かつ、これに同意したものとする。
	**********************************************************************/

  --第９条(取扱い区間) 
	/*********************************************************************
	 * Operation名　：　当社線駅である
	 *　概要　　　　　　  ：　駅（駅ナンバリング）が当社線に属する駅か真偽値を返却する
	 *
	 *　[規定]
	 * 第９条　当社におけるＩＣカード乗車券の取扱区間は、営業規程第３条第１号に規定する当社線とする。
   * ※営業規程第３条第１号
   *    当社線　銀座線、丸ノ内線、日比谷線、東西線、千代田線、有楽町線、半蔵門線
   *          南北線及び副都心線をいう。
	**********************************************************************/
  public pure 当社線駅である : token ==> bool
	当社線駅である(a駅ナンバリング) ==
  	if a駅ナンバリング in set 当社線 then return true else return false;

functions

	-- キロ程の集合から、最短となるキロ程を取得する
	public static 最短のキロ程を取得する : set of real -> real
	最短のキロ程を取得する(aキロ程) == (
		let w最短のキロ程 in set aキロ程 be st forall wキロ程 in set aキロ程 & w最短のキロ程 <= wキロ程
		in w最短のキロ程
	)
	pre 
		aキロ程 <> {}
	post
		forall wキロ程　in set aキロ程 & RESULT <= wキロ程
	;

	-- 小数点以下を切り上げる
	public 端数を１キロ単位に切り上げ : real +> nat
	端数を１キロ単位に切り上げ(aキロ程) ==
  	if floor aキロ程 = aキロ程 then
    	floor aキロ程
  	else
    	floor (aキロ程 + 1)
	pre
  	aキロ程 >= 0
	;

--    
traces
-- TODO Define Combinatorial Test Traces here

end 第１編（総則）